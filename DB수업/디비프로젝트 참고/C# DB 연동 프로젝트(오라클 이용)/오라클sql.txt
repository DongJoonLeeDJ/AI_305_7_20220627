-- USER SQL
CREATE USER HEALTH IDENTIFIED BY "1234"  
DEFAULT TABLESPACE "SYSTEM"
TEMPORARY TABLESPACE "TEMP";

-- QUOTAS

-- ROLES
GRANT "DBA" TO HEALTH ;
GRANT "CONNECT" TO HEALTH ;
GRANT "RESOURCE" TO HEALTH ;

-- SYSTEM PRIVILEGES
GRANT CREATE VIEW TO HEALTH ;


CREATE TABLE "HEALTH"."CUSTOMER" 
   (	"NAME" NVARCHAR2(5) NOT NULL ENABLE, 
	"TEL" NVARCHAR2(11) NOT NULL ENABLE, 
	"GENDER" NVARCHAR2(1) NOT NULL ENABLE, 
	"ADDRESS" NVARCHAR2(20) NOT NULL ENABLE, 
	"ROCKER" NUMBER(3,0), 
	"REGI_DATE" DATE NOT NULL ENABLE, 
	"EXPIRE_DATE" DATE NOT NULL ENABLE, 
	"DURING" NUMBER(3,0) NOT NULL ENABLE, 
	 CONSTRAINT "CUSTOMER_PK" PRIMARY KEY ("TEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "HEALTH"."TRG_EXPIRE" 
BEFORE INSERT OR UPDATE
ON CUSTOMER
FOR EACH ROW
BEGIN
IF INSERTING AND :NEW.EXPIRE_DATE IS NULL THEN
SELECT ADD_MONTHS(:NEW.REGI_DATE, :NEW.DURING) INTO :NEW.EXPIRE_DATE FROM DUAL;
ELSIF UPDATING AND :OLD.EXPIRE_DATE IS NOT NULL THEN
SELECT ADD_MONTHS(:OLD.REGI_DATE, + :NEW.DURING) INTO :NEW.EXPIRE_DATE FROM DUAL;
END IF;
END;
/

ALTER TRIGGER "HEALTH"."TRG_EXPIRE" ENABLE;

  CREATE TABLE "HEALTH"."INBODY" 
   (	"IDNUM" NUMBER(5,0) NOT NULL ENABLE, 
	"TEL" NVARCHAR2(11) NOT NULL ENABLE, 
	"HEIGHT" NUMBER(4,1) NOT NULL ENABLE, 
	"WEIGHT" NUMBER(4,1) NOT NULL ENABLE, 
	"MUSCLE" NUMBER(4,1) NOT NULL ENABLE, 
	"FAT" NUMBER(4,1) NOT NULL ENABLE, 
	"PER_FAT" NUMBER(3,1), 
	"BMI" NUMBER(3,1), 
	 CONSTRAINT "INBODY_PK" PRIMARY KEY ("IDNUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "INBODY_FK1" FOREIGN KEY ("TEL")
	  REFERENCES "HEALTH"."CUSTOMER" ("TEL") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "HEALTH"."TRG_PERFAT_BMI" 
BEFORE INSERT
ON INBODY
FOR EACH ROW
BEGIN 
 IF INSERTING AND :NEW.PER_FAT IS NULL THEN
 SELECT (:NEW.FAT/:NEW.WEIGHT)*100 INTO :NEW.PER_FAT FROM DUAL;
 END IF; 
 IF INSERTING AND :NEW.BMI IS NULL THEN
 SELECT (:NEW.WEIGHT / ((:NEW.HEIGHT*0.01) * (:NEW.HEIGHT*0.01))) INTO :NEW.BMI FROM DUAL;
 END IF;
END;
/
ALTER TRIGGER "HEALTH"."TRG_PERFAT_BMI" ENABLE;

  CREATE OR REPLACE TRIGGER "HEALTH"."AUTOSEQ" 
BEFORE INSERT ON INBODY
FOR EACH ROW
BEGIN
  IF INSERTING AND :NEW.IDNUM IS NULL THEN
  SELECT SEQ_INBODY.NEXTVAL INTO :NEW.IDNUM FROM DUAL;
  END IF;
END;
/
ALTER TRIGGER "HEALTH"."AUTOSEQ" ENABLE;


--시퀀스 생성
CREATE SEQUENCE SEQ_INBODY INCREMENT BY 1 START WITH 1 MAXVALUE 10000 MINVALUE 1 NOCYCLE;



CREATE OR REPLACE FORCE VIEW "HEALTH"."V_EXCUS" ("이름", "연락처", "TEMP", "만료일") AS 
  SELECT NAME AS 이름, TEL AS 연락처,to_date(EXPIRE_DATE)-to_date(SYSDATE) as temp, EXPIRE_DATE AS 만료일 FROM CUSTOMER 
WHERE to_date(EXPIRE_DATE)-to_date(SYSDATE) <= 10;

INSERT INTO CUSTOMER VALUES('온창민', '01093600870', '남', '경남 함양군 안의면 유동길 56-29', 1, TO_DATE('2021-05-14', 'YYYY-MM-DD'), NULL, 1);
INSERT INTO CUSTOMER VALUES('김종국', '01011111111', '남', '대구 달서구 감삼길 11', 1, TO_DATE('2021-03-19', 'YYYY-MM-DD'), NULL, 3);
INSERT INTO CUSTOMER VALUES('김태희', '01022222222', '여', '대구 예쁘군 두두길 9', 2, TO_DATE('2021-6-5', 'YYYY-MM-DD'), NULL, 2);

INSERT INTO INBODY VALUES(NULL, '01093600870', 176, 75, 36.3, 11.2, NULL, NULL);
