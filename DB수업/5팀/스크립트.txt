1페이지
안녕하십니까
5팀입니다.
발표 시작하겠습니다.


2페이지
목차는 이와 같습니다.
첫번째 프로젝트 개요
두번째 팀구성원 역할소개
세번째 프로젝트 수행절차
네번째 프로젝트 수행결과
그리고 맨 마지막으로 자체 평가 의견입니다.

3페이지
프로젝트 개요입니다.
저희는 서점에서 실제로 사용할 수 있는 데이터베이스를
목표로 설계하고 프로젝트를 수행하였습니다.

4페이지
각 팀원들의 역할입니다.
다들 각자 역할에 충실하게 프로젝트를 진행하였습니다.

5페이지
프로젝트 수행절차입니다.
다같이 역할을 잘 분배하고 각자의 자리에서 열심히 준비하여서
이렇게 발표하게 되었습니다.

6페이지
프로젝트가 어떻게 진행되었는지 설명드리겠습니다.
우선 저희는 3개의 테이블을 만들었습니다.
Orders에 2개의 외래키가 연결되어 있습니다.
book에 책 데이터가 들어가고
customer에 고객 데이터가 들어가며
orders에는 주문 데이터가 들어갑니다.

7페이지
book테이블입니다.
책의 고유코드, 책 이름, 출판사명, 책가격이 있습니다.

8페이지
테이블을 생성한 DDL문입니다. 
(DDL : Data Definition Language)
(create, drop, alter 등 테이블을 만들거나 삭제 또는 수정하는 구문)

9페이지
customer테이블입니다.
고객의 고유코드, 고객명, 고객주소, 고객 연락처 정보가 있습니다.

10페이지
테이블을 생성한 DDL문입니다.

11페이지
orders 테이블입니다.
주문ID를 기본키로 하여서 고객의 고유코드와 책의 고유코드를 외래키로 합니다.


12페이지
테이블을 생성한 DDL문입니다.
주문날짜는 디폴트데이터를 sysdate로 설정하여 현재날짜가 기본으로 들어갑니다.
참고로 말씀드리자면, saleprice를 추가하려다가 우선 보류하였습니다.

13페이지
트리거를 수행할 때마다 내용을 기록하는 테이블을 하나 만들었습니다.
책을 추가할 때마다 어떤 책을 추가했고, 언제 추가했는지 적어놓습니다.
시퀀스를 이용해서 num 값을 자동증가하도록 하였습니다.


14페이지
이렇게 만든 테이블들에 대한 CRUD 코드들입니다.

15페이지
join, group by, view, 중첩질의를 활용한 것들입니다.

16페이지
책을 insert 문 대신 프로시저를 콜하여 추가할 수 있도록 프로시저 하나 추가해봤습니다.

17페이지
책의 코드, 고객의 코드를 통하여 책이름, 고객명을 알 수 있게 해주는 함수들입니다.

18페이지
파이프라인 함수는 쉽게 말하면 테이블을 반환하는 함수입니다.
즉 결과값이 여러 개인 것을 반환합니다.
여기서는 출판사를 입력받고, 해당 출판에 해당하는 값을 저장하는 테이블을 반환합니다.
즉 select 문값을 반환합니다.

19페이지
앞페이지에서는 함수에 필요한 객체를 선언한 것이고
여기서부터 본격적인 함수정의입니다.
출판사명을 이용한 select문의 결과값을 표형태로 반환합니다.

20페이지
자동적으로 증가하는 값이 필요해서 booklog라는 시퀀스를 추가했습니다.
시퀀스가 없어도 트리거는 얼마든지 만들 수 있습니다.
이 트리거는 book테이블에 책 추가되면 그 책이 언제 추가되었으며 어떤 책인지를 
별도의 테이블에 추가해주는 구문입니다.

21페이지
프로젝트 수행결과입니다.
crud문들을 수행한 결과들입니다.

22페이지
join등의 기타 sql문등을 실행한 결과들입니다.

23페이지
프로시저를 수행하여 책을 하나 추가해봤습니다.

24페이지
함수를 이용하여 join 없이 orders에 있는 custid와 bookid에 해당하는
이름들을 출력하였습니다.

25페이지
파이프 라인 함수 활용하여 특정 출판사 책들만 출력해봤습니다.

26페이지
트리거가 작도오디어 bookstorelog에 데이터가 추가된 것을 확인하였습니다.

27페이지
다들 너무 잘해주었지만, saleprice를 추가하려다가 보류한 것이 아쉽습니다.
더 공부하여 추가할 수 있도록 해보겠습니다.

28페이지
이상입니다.
감사합니다.
질문있으십니까?































